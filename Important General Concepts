----------------------------------------------------------------------------------------------------------
To count the number of subarrays that necessarily contain the number 3 from the array: [4, 6, 7, 3, 7, 8]
To count the number of subarrays that include a specific index i in an array of length n, the formula is:
Count=(i+1)×(n−i)
Why?
There are i + 1 choices for the start of the subarray (from index 0 to i)
There are n - i choices for the end of the subarray (from index i to n - 1)
Every combination of start and end that includes index i is a valid subarray containing the target
Count=(3+1)×(6−3)=4×3=12
----------------------------------------------------------------------------------------------------------
sum of first n natural numbers : n * (n + 1) / 2;
sum of first n Even numbers : n * (n + 1);
sum of first n Odd numbers : n * n;

----------------------------------------------------------------------------------------------------------
String s of lenght n and k , Find all possible remaining strings of length n −k after removing a continuous substring of length k.
s : "LUL" and k = 1 then possible stirng after removing substrings of length 1 is "LL" , "LU", "UL"
How it works :
You can remove a substring of length k  starting at any index i such that 0 <= i <= n - k.
For each valid index i, the remaining string is: s[0:i] + s[i+k:n] , This gives you (n - k + 1) different remaining strings.
Number of possible remaining strings: Count = n - k + 1; and each of these strings will be of length n - k.
